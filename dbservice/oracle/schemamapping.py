
from dbservice.oracle.oracleconnector import OracleConnector

def create_table_statement_migrate(create_table_statement):
    #print(create_table_statement)
    create_table_statement = str(create_table_statement)

    # no affect on creating table
    #Find auto-increment starting value.
    if "START WITH" in create_table_statement:
        index1 = create_table_statement.index("START WITH")
        last_index = create_table_statement.index("CACHE")
        start_value = create_table_statement[index1+len("START WITH")+1:last_index-1]
        table_name = str(create_table_statement).split("\n")[1].split('"')[1]
        table_alter = f"""ALTER TABLE {table_name} AUTO_INCREMENT={start_value}"""

    else:
        start_value = ""
        table_alter = None
        #create_table_statement += "\n"

    # table description cleaning & datatype mapping
    create_table_statement = (
        create_table_statement.replace("GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 "
                                       "MAXVALUE 9999999999999999999999999999 INCREMENT "
                                       "BY 1 START WITH "+str(start_value),"AUTO_INCREMENT")
        .replace(" CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE", "")
        .replace(" USING INDEX  ENABLE", "")
        .replace('"',"")
        .replace("NOT NULL ENABLE", "NOT NULL")
        .replace("SET NULL ENABLE", "SET NULL")
        .replace("CASCADE ENABLE","CASCADE")
        .replace("VARCHAR2", "VARCHAR")
        .replace('NUMBER', 'DOUBLE')
        .replace('float', 'float')
    )
    print(create_table_statement)
    create_table_statement = f"""{create_table_statement}"""
    return create_table_statement, table_alter





